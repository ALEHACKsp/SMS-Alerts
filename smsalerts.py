import smtplib, os, sys
from email.message import EmailMessage

class SmsAlerts():

	"""Class for easily creating and sending SMS Alerts to your mobile phone.
	
	Accepts your phone number and your carrier's email gateway (more info
	below)
	
	In order to send messages to yourself, you have to specify the gateway 
	that your phone carrier uses. A list of these can be found at 
	https://www.lifewire.com/sms-gateway-from-email-to-sms-text-message-2495456.
	Pass in the correct gateway like this: '@gateway.com'.

	Once the class is initialized, use the login(email, app_password) method
	and provide the gmail account you will send alerts with, as well as the
	app password (not login password) that was generated by Google. The
	login method will create the SMTP connection, so a custom SMTP address
	or port must be set by altering the variables smtp_address and
	smtp_port.

	At the end of your program, you must call the close() method so that the
	connection to the email server is terminated.

	`login(email, password)` - Takes your google email as well as an app
	password in order to send messages to the gateway.

	`send(message, subject)` - Sends a message with an optional subject
	to the phone number provided. Pass in `None` as the subject to
	send the alert without it.

	`close()` - Must be called at the end of your program to terminate
	the connection with the email server.
	"""

	def __init__(self, phone_number: str, gateway: str):

		self.__email = None
		self.__password = None

		self.phone_number = str(phone_number)
		self.gateway = gateway

		self.__target_email = self.phone_number + self.gateway

		self.smtp_address = "smtp.gmail.com"
		self.smtp_port = 587

	def __setup_smtp(self):

		self.server = smtplib.SMTP(self.smtp_address, self.smtp_port)
		self.server.starttls()

	def login(self, email: str, password: str):
		"""Logs into the gmail server so that you are able to send alerts."""

		self.__setup_smtp()

		self.__email = email
		self.__password = password

		self.server.login(self.__email, self.__password)

	def send(self, message: str, subject: str):
		"""Sends an alert to the phone number given using email and the
		SMS Gateway. If subject is None then only the content will be
		sent."""

		if self.__email == None or self.__password == None:
			raise SmsAlertsException("Must be logged into your email to do that!")

		alert_message = EmailMessage()
		alert_message.set_content(message)

		alert_message['subject'] = subject if not subject == "" or not subject == None else "SMS Alert"
		alert_message['to'] = self.__target_email
		alert_message['from'] = "SMSAlerts.py " + self.__email

		self.server.send_message(alert_message)

	def close(self):
		"""Closes the connection to the email servers. This must be called
		at the end of your program."""

		if self.server == None:
			raise SmsAlertsException("Must be logged in and have an active email session to close.")

		self.server.quit()


class SmsAlertsException(Exception):

	"""Class for custom exceptions that may be encountered while
	sending or initializing the SMS Alerts."""

	pass
